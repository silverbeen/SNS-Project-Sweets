{"version":3,"sources":["myBase.js","routers/Profile.js","components/AuthForm.js","routers/Auth.js","components/Sweet.js","components/SweetFactory.js","routers/Home.js","components/Navigation.js","components/Router.js","components/App.js","index.js"],"names":["firebase","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","firebaseInstance","authService","auth","dbService","firestore","storageService","storage","Profile","refreshUser","userObject","histoty","useHistory","useState","displayName","newDisplayName","setNewDisplayName","newProfilePhoto","setNewProfilePhoto","getMySweets","a","collection","where","uid","orderBy","get","sweets","console","log","docs","map","doc","data","onSubmit","e","preventDefault","updateProfile","profileURL","profileRef","ref","child","putString","res","getDownloadURL","profileObj","add","useEffect","className","src","style","backgroundImage","onClick","icon","faTimes","id","type","accept","placeholder","onChange","theFile","target","files","reader","FileReader","onloadend","finishedEvet","result","currentTarget","readAsDataURL","maxLength","opacity","htmlFor","faPlus","autoFocus","value","signOut","push","AuthForm","email","setEmail","password","setPassword","newAccount","setNewAccount","error","setError","name","createUserWithEmailAndPassword","signInWithEmailAndPassword","message","required","prev","Auth","onSocialClick","provider","GoogleAuthProvider","GithubAuthProvider","signInWithPopup","faTwitter","color","size","marginBottom","faGoogle","faGithub","Sweet","sweetObject","isOwner","editing","setEditing","text","newSweet","setNewSweet","onDeleteClick","ok","window","confirm","delete","refFromURL","fileURL","onEditClick","update","faTrash","faPencilAlt","SweetFactory","sweet","setSweet","file","setFile","fileRef","uuidv4","sweetObj","createdAt","Date","now","creatorId","onClearFile","finishedEvent","Home","setSweets","onSnapshot","snapshot","sweetArray","marginTop","Navigation","display","justifyContent","exact","to","marginRight","marginLeft","flexDirection","alignItems","fontSize","faUser","AppRouter","isLoggedIn","maxWidth","width","margin","path","from","App","init","setInit","setUserObject","onAuthStateChanged","user","args","currentUser","Boolean","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.dce42614.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\nimport \"firebase/firestore\";\r\nimport \"firebase/storage\";\r\n\r\nconst firebaseConfig = {\r\n  apiKey: process.env.REACT_APP_API_KEY,\r\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\r\n  projectId: process.env.REACT_APP_PROJECT_ID,\r\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\r\n  messagingSenderId: process.env.REACT_APP_MESSAGIN_ID,\r\n  appId: process.env.REACT_APP_APP_ID,\r\n  measurementId: process.env.REACT_APP_MEASUR_ID,\r\n};\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nexport const firebaseInstance = firebase;\r\n\r\nexport const authService = firebase.auth();\r\nexport const dbService = firebase.firestore();\r\nexport const storageService = firebase.storage();\r\n","import { authService, dbService, storageService } from \"../myBase\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faPlus, faTimes } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst Profile = ({ refreshUser, userObject }) => {\r\n  const histoty = useHistory();\r\n  const [newDisplayName, setNewDisplayName] = useState(userObject.displayName);\r\n  const [newProfilePhoto, setNewProfilePhoto] = useState(\"\");\r\n\r\n  const onLogOutClick = () => {\r\n    authService.signOut();\r\n    histoty.push(\"/\");\r\n    refreshUser();\r\n  };\r\n\r\n  const onChange = (e) => {\r\n    const {\r\n      target: { value },\r\n    } = e;\r\n    setNewDisplayName(value);\r\n  };\r\n\r\n  //db 데이터 필터링\r\n  const getMySweets = async () => {\r\n    const sweets = await dbService\r\n      .collection(\"sweets\")\r\n      .where(\"creatorId\", \"==\", userObject.uid)\r\n      .orderBy(\"createdAt\")\r\n      .get();\r\n    console.log(sweets.docs.map((doc) => doc.data()));\r\n  };\r\n\r\n  //프로필 이름 변경\r\n  const onSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    if (userObject.displayName !== newDisplayName) {\r\n      await userObject.updateProfile({\r\n        displayName: newDisplayName,\r\n      });\r\n      refreshUser();\r\n    }\r\n\r\n    let profileURL = \"\";\r\n\r\n    if (profileURL !== \"\") {\r\n      const profileRef = storageService.ref().child(`${userObject.uid}`);\r\n      const res = await profileRef.putString(newProfilePhoto, \"data_url\");\r\n      profileURL = await res.ref.getDownloadURL();\r\n    }\r\n\r\n    const profileObj = {\r\n      displayName: newDisplayName,\r\n      profileURL,\r\n    };\r\n\r\n    await dbService.collection(\"profile\").add(profileObj);\r\n\r\n    console.log(profileURL);\r\n    //setNewProfilePhoto(\"\");\r\n  };\r\n\r\n  const onProfileChange = (e) => {\r\n    const {\r\n      target: { files },\r\n    } = e;\r\n\r\n    const theFile = files[0];\r\n    const reader = new FileReader();\r\n    reader.onloadend = (finishedEvet) => {\r\n      const {\r\n        currentTarget: { result },\r\n      } = finishedEvet;\r\n\r\n      setNewProfilePhoto(result);\r\n    };\r\n    reader.readAsDataURL(theFile);\r\n  };\r\n\r\n  const onClearFile = () => setNewProfilePhoto(null);\r\n\r\n  useEffect(() => {\r\n    getMySweets();\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <form className=\"profileForm\" onSubmit={onSubmit}>\r\n        <img\r\n          className=\"my-face\"\r\n          //src={profileObj.profileURL}\r\n          /*           style={{\r\n            backgroundImage: profileURL,\r\n          }} */\r\n        />\r\n        {newProfilePhoto && (\r\n          <div className=\"factoryForm__attachment\">\r\n            <img\r\n              src={newProfilePhoto}\r\n              style={{\r\n                backgroundImage: newProfilePhoto,\r\n              }}\r\n            />\r\n\r\n            <div className=\"factoryForm__clear\" onClick={onClearFile}>\r\n              <span>Remove</span>\r\n              <FontAwesomeIcon icon={faTimes} />\r\n            </div>\r\n          </div>\r\n        )}\r\n        <input\r\n          //value={sweet}\r\n          id=\"attach-file\"\r\n          type=\"file\"\r\n          accept=\"image/*\"\r\n          placeholder=\"What's on your mind?\"\r\n          onChange={onProfileChange}\r\n          maxLength={120}\r\n          style={{\r\n            opacity: 0,\r\n          }}\r\n        />\r\n        <label htmlFor=\"attach-file\" className=\"factoryInput__label\">\r\n          <span>Edit photos</span>\r\n          <FontAwesomeIcon icon={faPlus} />\r\n        </label>\r\n\r\n        <input\r\n          className=\"formInput\"\r\n          autoFocus\r\n          placeholder=\"Display name\"\r\n          type=\"text\"\r\n          value={newDisplayName}\r\n          onChange={onChange}\r\n        />\r\n        <input className=\"formBtn\" type=\"submit\" value=\"Updata Profile\" />\r\n      </form>\r\n      <button className=\"formBtn cancelBtn logOut\" onClick={onLogOutClick}>\r\n        Log Out\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n","import { authService } from \"../myBase\";\r\nimport React, { useState } from \"react\";\r\n\r\nconst AuthForm = () => {\r\n  const [email, setEmail] = useState(null);\r\n  const [password, setPassword] = useState(null);\r\n  const [newAccount, setNewAccount] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const onChange = (e) => {\r\n    const {\r\n      target: { name, value },\r\n    } = e;\r\n    if (name === \"email\") {\r\n      setEmail(value); //바뀐 값들을 저장\r\n    } else if (name === \"password\") {\r\n      setPassword(value);\r\n    }\r\n  };\r\n\r\n  const onSubmit = async (e) => {\r\n    e.preventDefault(); // 새로고침 방지 onSubmit 은 기본값이 새로고침\r\n\r\n    try {\r\n      let data;\r\n      //계정이 없어서 계정을 만등러야 할때,\r\n      if (newAccount) {\r\n        data = await authService.createUserWithEmailAndPassword(\r\n          email,\r\n          password\r\n        );\r\n      } else {\r\n        data = await authService.signInWithEmailAndPassword(email, password);\r\n      }\r\n      console.log(data);\r\n    } catch (e) {\r\n      setError(e.message);\r\n    }\r\n  };\r\n\r\n  const toggleAccount = () => setNewAccount((prev) => !prev);\r\n  return (\r\n    <>\r\n      <form className=\"container\" onSubmit={onSubmit}>\r\n        <input\r\n          name=\"email\"\r\n          placeholder=\"Email\"\r\n          type=\"text\"\r\n          required\r\n          value={email}\r\n          onChange={onChange}\r\n          className=\"authInput\"\r\n        />\r\n        <input\r\n          name=\"password\"\r\n          placeholder=\"password\"\r\n          type=\"password\"\r\n          required\r\n          value={password}\r\n          onChange={onChange}\r\n          className=\"authInput\"\r\n        />\r\n        <input\r\n          type=\"submit\"\r\n          value={newAccount ? \"Create Account\" : \"Sign In\"}\r\n          className=\"authInput authSubmit\"\r\n        />\r\n        {error && <span className=\"authError\">{error}</span>}\r\n      </form>\r\n      <span onClick={toggleAccount} className=\"authSwitch\">\r\n        {newAccount ? \"Sign In\" : \"Create Account\"}\r\n      </span>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AuthForm;\r\n","import React from \"react\";\r\nimport { authService, firebaseInstance } from \"../myBase\";\r\nimport AuthForm from \"../components/AuthForm\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faTwitter,\r\n  faGoogle,\r\n  faGithub,\r\n} from \"@fortawesome/free-brands-svg-icons\";\r\n\r\nconst Auth = () => {\r\n  const onSocialClick = async (e) => {\r\n    console.log(e.target.name);\r\n    const {\r\n      target: { name },\r\n    } = e;\r\n\r\n    let provider;\r\n    if (name === \"google\") {\r\n      provider = new firebaseInstance.auth.GoogleAuthProvider();\r\n    } else if (name === \"github\") {\r\n      provider = new firebaseInstance.auth.GithubAuthProvider();\r\n    }\r\n\r\n    const data = await authService.signInWithPopup(provider);\r\n    console.log(data);\r\n  };\r\n\r\n  return (\r\n    <div className=\"authContainer\">\r\n      <FontAwesomeIcon\r\n        icon={faTwitter}\r\n        color={\"#04AAFF\"}\r\n        size=\"3x\"\r\n        style={{ marginBottom: 30 }}\r\n      />\r\n      <AuthForm />\r\n      <div className=\"authBtns\">\r\n        <button className=\"authBtn\" name=\"google\" onClick={onSocialClick}>\r\n          Continue with Google\r\n          <FontAwesomeIcon icon={faGoogle} />\r\n        </button>\r\n        <button className=\"authBtn\" name=\"github\" onClick={onSocialClick}>\r\n          Continue with Github\r\n          <FontAwesomeIcon icon={faGithub} />\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Auth;\r\n","import React, { useState } from \"react\";\r\nimport { dbService, storageService } from \"../myBase\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTrash, faPencilAlt } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst Sweet = ({ sweetObject, isOwner }) => {\r\n  const [editing, setEditing] = useState(false);\r\n  //수정된 글 input 값 수정 가능\r\n  const [newSweet, setNewSweet] = useState(sweetObject.text);\r\n\r\n  //삭제\r\n  const onDeleteClick = async () => {\r\n    const ok = window.confirm(\"이 게시글을 삭제하시겠습니까>\");\r\n    console.log(ok);\r\n    if (ok) {\r\n      await dbService.doc(`sweets/${sweetObject.id}`).delete();\r\n      await storageService.refFromURL(sweetObject.fileURL).delete();\r\n    }\r\n  };\r\n\r\n  const onEditClick = () => setEditing((prev) => !prev);\r\n\r\n  const onSubmit = async (e) => {\r\n    e.preventDefault();\r\n    await dbService.doc(`sweets/${sweetObject.id}`).update({\r\n      text: newSweet,\r\n    });\r\n    //더이상 수정모드가 아니기에 false 설정\r\n    setEditing(false);\r\n  };\r\n\r\n  const onChange = (e) => {\r\n    const {\r\n      target: { value },\r\n    } = e;\r\n    setNewSweet(value);\r\n  };\r\n\r\n  return (\r\n    <div className=\"sweet\">\r\n      {editing ? ( // 너가 만약 수정중이라면 ?? 폼을 보여줘\r\n        <>\r\n          <form className=\"container\" onSubmit={onSubmit}>\r\n            <input\r\n              className=\"formInput\"\r\n              autoFocus\r\n              onChange={onChange}\r\n              type=\"text\"\r\n              placeholder=\"수정할 게시글을 써주세요\"\r\n              value={newSweet}\r\n              required\r\n            />\r\n            <input type=\"submit\" value=\"수정하기\" className=\"formBtn\" />\r\n          </form>\r\n          <button onClick={onEditClick} className=\"formBtn cancleBtn\">\r\n            Cancle\r\n          </button>\r\n        </>\r\n      ) : (\r\n        // 아니라면\r\n        <>\r\n          <div className=\"sweet-header\">\r\n            <img className=\"profile-img\" src=\"/\" />\r\n            <span>사용자이름</span>\r\n            {isOwner && ( // 이게 내 게시글이라면 버튼을 뜨게해\r\n              <div className=\"sweet__actions\">\r\n                <span onClick={onDeleteClick}>\r\n                  <FontAwesomeIcon icon={faTrash} />\r\n                </span>\r\n                <span onClick={onEditClick}>\r\n                  <FontAwesomeIcon icon={faPencilAlt} />\r\n                </span>\r\n              </div>\r\n            )}\r\n          </div>\r\n          {sweetObject.fileURL && (\r\n            <img className=\"file-img\" src={sweetObject.fileURL} />\r\n          )}\r\n          <h4>{sweetObject.text}</h4>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Sweet;\r\n","import React, { useState } from \"react\";\r\n//랜덤으로 식별자를 정해주는 npm\r\nimport { dbService, storageService } from \"../myBase\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faPlus, faTimes } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst SweetFactory = ({ userObject }) => {\r\n  const [sweet, setSweet] = useState(\"\");\r\n  const [file, setFile] = useState(\"\");\r\n\r\n  const onSubmit = async (e) => {\r\n    if (sweet === \"\") {\r\n      return;\r\n    }\r\n    e.preventDefault();\r\n\r\n    let fileURL = \"\";\r\n\r\n    if (file !== \"\") {\r\n      const fileRef = storageService\r\n        .ref()\r\n        .child(`${userObject.uid}/${uuidv4()}`);\r\n      const res = await fileRef.putString(file, \"data_url\");\r\n      fileURL = await res.ref.getDownloadURL();\r\n    }\r\n\r\n    const sweetObj = {\r\n      // 어떤 곳에 저장해야할지\r\n      text: sweet,\r\n      //원하는 데이터를 넣을 수 있음\r\n      createdAt: Date.now(),\r\n      creatorId: userObject.uid,\r\n      fileURL,\r\n    };\r\n    await dbService.collection(\"sweets\").add(sweetObj);\r\n    setSweet(\"\");\r\n    setFile(\"\");\r\n  };\r\n\r\n  const onChange = (e) => {\r\n    const {\r\n      target: { value },\r\n    } = e;\r\n    setSweet(value);\r\n  };\r\n\r\n  //파일 첨부\r\n  const onFileChange = (e) => {\r\n    const {\r\n      target: { files },\r\n    } = e;\r\n\r\n    const theFile = files[0];\r\n    const reader = new FileReader();\r\n    reader.onloadend = (finishedEvent) => {\r\n      const {\r\n        currentTarget: { result },\r\n      } = finishedEvent;\r\n      setFile(result);\r\n    };\r\n    reader.readAsDataURL(theFile);\r\n  };\r\n\r\n  const onClearFile = () => setFile(null);\r\n\r\n  return (\r\n    <form onSubmit={onSubmit} className=\"factoryForm\">\r\n      <div className=\"factoryInput__container\">\r\n        <input\r\n          className=\"factoryInput__input\"\r\n          value={sweet}\r\n          type=\"text\"\r\n          placeholder=\"무슨생각을 하나요\"\r\n          maxLength={120}\r\n          onChange={onChange}\r\n        />\r\n        <input type=\"submit\" value=\"&rarr;\" className=\"factoryInput__arrow\" />\r\n\r\n        {/* 등록 버튼 */}\r\n      </div>\r\n\r\n      <label htmlFor=\"attach-file\" className=\"factoryInput__label\">\r\n        <span>Add photos</span>\r\n        <FontAwesomeIcon icon={faPlus} />\r\n      </label>\r\n\r\n      <input\r\n        //value={sweet}\r\n        id=\"attach-file\"\r\n        type=\"file\"\r\n        accept=\"image/*\"\r\n        placeholder=\"What's on your mind?\"\r\n        onChange={onFileChange}\r\n        maxLength={120}\r\n        style={{\r\n          opacity: 0,\r\n        }}\r\n      />\r\n\r\n      {/* 파일이 존재한다면 이미지 띄우기  */}\r\n      {file && (\r\n        <div className=\"factoryForm__attachment\">\r\n          <img\r\n            src={file}\r\n            style={{\r\n              backgroundImage: file,\r\n            }}\r\n          />\r\n          <button onClick={onClearFile}>Clear</button>\r\n\r\n          <div className=\"factoryForm__clear\" onClick={onClearFile}>\r\n            <span>Remove</span>\r\n            <FontAwesomeIcon icon={faTimes} />\r\n          </div>\r\n        </div>\r\n      )}\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default SweetFactory;\r\n","import { dbService } from \"../myBase\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport Sweet from \"../components/Sweet\";\r\nimport SweetFactory from \"../components/SweetFactory\";\r\n\r\nconst Home = ({ userObject }) => {\r\n  const [sweets, setSweets] = useState([]);\r\n\r\n  useEffect(() => {\r\n    dbService\r\n      .collection(\"sweets\") // 어떤 곳에 저장해야할지\r\n      .orderBy(\"createdAt\", \"desc\") // 등록을 해도 시간차 순서가 쌓이지 않아 시간차순으로 정렬함\r\n      .onSnapshot((snapshot) => {\r\n        //onSnapshot\r\n        //db 에 어떤일이 발생하면 알려줌\r\n        // 무언가를 지우거나, 수정했을때 실행하게 해주는 것\r\n        //실시간으로 업데이트 해줌\r\n        const sweetArray = snapshot.docs.map((doc) => ({\r\n          id: doc.id,\r\n          ...doc.data(),\r\n        }));\r\n        setSweets(sweetArray); // 배열관계는 위에 아이처럼 생김\r\n      });\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <SweetFactory userObject={userObject} />\r\n      <div style={{ marginTop: 30 }}>\r\n        {sweets.map((sweet) => (\r\n          <Sweet\r\n            key={sweet.id}\r\n            sweetObject={sweet} // 글쓴이, 내용, 작성일\r\n            isOwner={sweet.creatorId === userObject.uid} // 내 자신의 글인가?\r\n          />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTwitter } from \"@fortawesome/free-brands-svg-icons\";\r\nimport { faUser } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst Navigation = ({ userObject }) => {\r\n  return (\r\n    <>\r\n      <ul style={{ display: \"flex\", justifyContent: \"center\", marginTop: 50 }}>\r\n        <li>\r\n          <Link exact=\"true\" to=\"/\" style={{ marginRight: 10 }}>\r\n            <FontAwesomeIcon icon={faTwitter} color={\"#04AAFF\"} size=\"2x\" />\r\n          </Link>\r\n        </li>\r\n        <li>\r\n          <Link\r\n            exact=\"true\"\r\n            to=\"/profile\"\r\n            style={{\r\n              marginLeft: 10,\r\n              display: \"flex\",\r\n              flexDirection: \"column\",\r\n              alignItems: \"center\",\r\n              fontSize: 12,\r\n            }}\r\n          >\r\n            <FontAwesomeIcon icon={faUser} color={\"#04AAFF\"} size=\"2x\" />\r\n            <span style={{ marginTop: 10 }}>\r\n              {userObject.displayName\r\n                ? `${userObject.displayName}의 Profile`\r\n                : \"Profile\"}\r\n            </span>\r\n          </Link>\r\n        </li>\r\n      </ul>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Navigation;\r\n","import React from \"react\";\r\nimport {\r\n  HashRouter as Router,\r\n  Redirect,\r\n  Route,\r\n  Switch,\r\n} from \"react-router-dom\";\r\nimport Profile from \"../routers/Profile\";\r\nimport Auth from \"../routers/Auth\";\r\nimport Home from \"../routers/Home\";\r\nimport Navigation from \"./Navigation\";\r\n\r\nconst AppRouter = ({ refreshUser, isLoggedIn, userObject }) => {\r\n  return (\r\n    <Router>\r\n      {isLoggedIn && <Navigation userObject={userObject} />}\r\n      <Switch>\r\n        <>\r\n          {isLoggedIn ? (\r\n            <div\r\n              style={{\r\n                maxWidth: 890,\r\n                width: \"100%\",\r\n                margin: \"0 auto\",\r\n                marginTop: 80,\r\n                display: \"flex\",\r\n                justifyContent: \"center\",\r\n              }}\r\n            >\r\n              <Route path=\"/\" exact>\r\n                <Home userObject={userObject} />\r\n              </Route>\r\n              <Route exact path=\"/profile\">\r\n                {/* 여기서 userObject 안보내줘서 한시간 동안 삽질 함 ㅅㅂ... 반성하자 은빈아 */}\r\n                <Profile userObject={userObject} refreshUser={refreshUser} />\r\n              </Route>\r\n              <Redirect from=\"*\" to=\"/\" />\r\n            </div>\r\n          ) : (\r\n            <>\r\n              <Route exact path=\"/\">\r\n                <Auth />\r\n              </Route>\r\n              <Redirect from=\"*\" to=\"/\" />\r\n            </>\r\n          )}\r\n        </>\r\n      </Switch>\r\n    </Router>\r\n  );\r\n};\r\nexport default AppRouter;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport AppRouter from \"./Router\";\r\nimport { authService } from \"../myBase\";\r\n\r\nfunction App() {\r\n  const [init, setInit] = useState(false);\r\n  //로그인여부 확인\r\n  const [userObject, setUserObject] = useState(\"\");\r\n\r\n  //onAuthStateChanged 유저가 로그인이 되는지 안되는지 알려줌\r\n  // 로그인, 로그아웃 할때에 사용\r\n  //초기화가 되었을때에도\r\n  useEffect(() => {\r\n    authService.onAuthStateChanged((user) => {\r\n      if (user) {\r\n        setUserObject({\r\n          // 받아오는 크키를 줄여줌\r\n          displayName: user.displayName,\r\n          uid: user.displayName,\r\n          updateProfile: (args) => user.updateProfile(args),\r\n        });\r\n      } else {\r\n        setUserObject(null);\r\n      }\r\n      setInit(true);\r\n    });\r\n  }, []);\r\n\r\n  const refreshUser = () => {\r\n    const user = authService.currentUser;\r\n    setUserObject({\r\n      displayName: user.displayName,\r\n      uid: user.displayName,\r\n      updateProfile: (args) => user.updateProfile(args),\r\n    });\r\n    //setUserObject(authService.currentUser);\r\n    //currentUser 로 했을때에는 제대로 작동이 되지만\r\n    //리액트가 상대하기에 너무 상태가 크기때문에\r\n    //크키를 줄여줌\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {init ? (\r\n        <AppRouter\r\n          refreshUser={refreshUser}\r\n          isLoggedIn={Boolean(userObject)}\r\n          userObject={userObject}\r\n        />\r\n      ) : (\r\n        \"기다려\"\r\n      )}\r\n      {/* <footer>&copy; switter {new Date().getFullYear()}</footer> */}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\nimport firebase from \"firebase/app\";\nimport \"./styles/style.css\";\n\nconsole.log(firebase);\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}